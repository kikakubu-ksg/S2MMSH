<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABILAAASCwAAAAAAAAAA
        AABDQ0MBQkJCRENDQ49DQ0OURERElERERJRERESURERElEVFRZRFRUWURUVFlEVFRZRGRkaURkZGlEZG
        RpRGRkaUR0dHlEdHR5RHR0eUPldalUdHR5RHR0eUR0dHlEdHR5RHR0eUR0dHlEdHR5RHR0eUR0dHlEdH
        R49HR0dER0dHAUJCQkRCQkL5QkJC/0NDQ/9DQ0P/QkdH/0RERP9ERET/RERE/0RERP9FRUX/RUVF/0ZG
        Rv9GRkb/RkZG/0ZGRv9GRkb/R0dH/0dHR/8teoP/RkhJ/0dHR/9HR0f/R0dH/0dHR/9HR0f/R0dH/0dH
        R/9HR0f/R0dH/0dHR/lHR0dEQUFBj0FBQf9BQUH/QkJC/0JCQv8yZWz/QUhJ/0NDQ/9ERET/RERE/0RE
        RP9ERET/RUVF/0VFRf9FRUX/RUVF/0ZGRv9GRkb/RkZG/zNyfP8sgI//R0dH/0dHR/9HR0f/R0dH/0dH
        R/9HR0f/R0dH/0dHR/9HR0f/R0dH/0ZGRo9BQUGUQUFB/0FBQf9BQUH/QUFB/ztSVf8ji5r/QkND/0ND
        Q/9DQ0P/RERE/0RERP9ERET/RERE/0RERP9FRUX/RUVF/0VFRf9GRkb/QlJZ/w/C4P9CVl3/R0dH/0ZG
        Rv9GRkb/R0dH/0dHR/9GRkb/R0dH/0dHR/9HR0f/R0dHlEBAQJRAQED/QEBA/0FBQf9BQUH/QENF/xO1
        0f87WGL/QkJC/0JCQv9DQ0P/Q0ND/0NDQ/9ERET/RERE/0RERP9ERET/RUVF/0VFRf9FSEr/IbbU/y+f
        u/9GSEn/RkZG/0dHR/9HR0f/R0dH/0dHR/9HR0f/RkZG/0ZGRv9GRkaUPz8/lD4+Pv8/Pz//Pz8//0BA
        QP9AQED/I5q0/yWpxf9AREf/QUFB/0FBQf9CQkL/QkJC/0NDQ/9DQ0P/Q0ND/0RERP9ERET/RERE/0RE
        RP8wlbT/Strx/z1sgv9GRkb/RkZG/0ZGRv9GRkb/RkZG/0ZGRv9GRkb/RkZG/0ZGRpQ+Pj6UPj4+/z4+
        Pv8+Pj7/Pz8//z8/P/8zdo3/Otnx/zd0jP9AQED/QUFB/0FBQf9BQUH/QkJC/0JCQv9CQkL/Q0ND/0ND
        Q/9DQ0P/RERE/ztzjf9t4/X/Ur3g/0ROVv9FRUX/RkZG/0ZGRv9GRkb/RkZG/0ZGRv9GRkb/RkZGlD09
        PZQ9PT3/Pj4+/z4+Pv8+Pj7/Pj4+/z1XZv9Q1/L/U8fm/z9PWf9AQED/QEBA/0FBQf9BQUH/QUFB/0FB
        Qf9CQkL/P2qE/ziFqv85hav/OI67/23Z9v+w7vr/Pomw/0RERP9FRUX/RUVF/0ZGRv9GRkb/RkZG/0ZG
        Rv9GRkaUPDw8lDw8PP88PDz/PU1Y/zxdcf88XnL/PGV+/1LD6P+n7/n/QJS8/z9AQP8/Pz//QEBA/0BA
        QP9AQED/QUFB/0FBQf9AUV3/NL7r/1/k8/+I6/b/d9v3/5rf+f9ew/T/QV9y/0RERP9ERET/RERE/0VF
        Rf9FRUX/RkZG/0ZGRpQ8PDyUOzs7/zw8PP88R0//L7Dk/0PW8/9g2/X/ct73/7vx+v+O2/f/PWN8/z4+
        Pv8/Pz//Pz8//z8/P/9AQED/QEBA/0BAQP89eJ3/a9v2/63x+f+U3vn/Poi5/0Fdcf9CVWL/Q0ND/0RE
        RP9ERET/RERE/0RERP9ERET/RUVFlDs7O5Q7Ozv/Ozs7/zs7O/87bIv/WNT1/5jt9/+P4Pn/Op7c/zt7
        pP89cZP/Pj4+/0FCQv9XWlj/eHt6/4KFg/+ChYT/g4aE/4SHhf+FiIf/homH/4WIh/+ChYP/foGA/3p9
        fP92eXj/cnV0/2pubP9UV1b/RkdG/0RERP9ERESUOTk5lDk5Of86Ojr/Ojo6/zs8Pf9BnNP/rO75/+T6
        /f+Dz/n/PVtv/zw8PP8/Pz//dXh2/8jKyf+6vLv/v8LB/8nLyv/T1dX/3d/e/+jp6f/z9PP/9fX1/+rq
        6v/d3t7/0NHR/8LFxP+1uLb/p6up/5aamP9gZGL/RUVF/0NDQ5Q5OTmUOTk5/zk5Of87Ozv/QUJB/0NY
        Zv9xqsb/xMjI/73GyP9Li7P/Q0ZG/0pNTP+eoJ//kJSS/42Rj/+QlJL/mZyb/6msq//GyMf/2NnZ/93f
        3v/g4uH/2tzb/9HT0v/GyMf/ur28/66xsP+ipqT/lZmY/36Dgf9KTEv/QkJClDg4OJQ4ODj/RUdG/4OG
        hP+oqqn/sLKx/7Gzsv+ztbT/tri4/7q8vP++wL//u728/7K1tP+qrav/oaSj/5mcm/+QlJL/hIiG/2pv
        bf+TlpX/xcjH/8zOzf/FyMf/vL++/7O2tf+qraz/oKOi/5WZl/+Kj43/goeF/0xOTf9BQUGUNzc3lD4/
        Pv+bnpz/w8bF/62wr/+1uLb/wsTE/9DS0f/c3dz/5+jo//Dw8P/u7u7/4+Tk/9fZ2P/KzMz/vcC//7Cz
        sv+jpqX/lZmX/2tvbf+cn53/u728/7O2tf+qraz/nqKg/5SYl/+MkY//f4SC/4SJh/90eHb/RkhH/z4+
        PpQ2NjaURklH/9HS0v+xtbT/rbCv/62wr/+7vr3/ycvK/83Pz//S1NP/1dfX/9na2f/R09L/x8rJ/73A
        v/+ytbT/p6qp/5qfnf+Ok5H/f4SC/3N3df+prKv/pqqo/5yhn/+Tl5X/iY6M/4WKiP+DiIb/Z2xq/1BT
        Uf89PT3/PT09lDU1NZRHSkj/3N3d/7i7uv+usbD/p6up/7m8u/+9wL//vcC//7y/vv+/wcD/xcjH/77A
        v/+0t7b/qa2r/6Ckov+Wm5n/jJGP/4WKiP+AhYP/c3d1/5ufnf+doaD/mJ2b/5ebmv+TmJb/jJCP/4aL
        if9tcnD/QkJC/zw8PP88PDyUNDQ0lDw9PP+hpKP/0dPS/7W4t/+gpKL/trm4/7O2tf+ws7L/rK+u/6qt
        rP+1uLf/rbGv/6Onpf+Wm5n/i5CO/4aLif97gH7/foKA/2lubP+WmZj/pKin/5ygn/+ZnZz/pqmo/56i
        of+Xm5r/j5OR/3B1c/9CQ0L/PDw8/zw8PJQyMjKUMjIy/0JEQ/+xs7L/uLu6/5KXlf+2ubj/s7a1/6yv
        rv+kqKb/nKCf/6GlpP+lqKf/nKCf/5SYlv+MkI7/houJ/4WKiP9kaWf/io2M/7e6uf+vsrH/nqKg/6Gl
        pP+vsrH/qq2s/6KmpP+MkY//W15d/zs7O/86Ojr/Ozs7lC0tLZQuLi7/OTo6/8DBwP+sr67/nqKh/66x
        sP+9wL7/trm4/66xsP+lqaj/naGf/5mdm/+UmJb/m5+d/5ebmf+QlJL/iI2L/290cv+cn57/s7a1/6Wp
        p/+Wm5n/n6Oh/46RkP+fo6L/i5CO/2RpZ/9JS0r/OTk5/zo6Ov86OjqULS0tlC0tLf81Njb/sbOy/8DC
        wf+rrqz/oqWk/7m8u/++wcD/uLu6/7Czsv+oq6r/oKSi/6Glo/+prav/oqak/5ufnf+QlZP/bHBu/62w
        r/+7v73/srW0/62wr/+DhoX/am5s/2VpZ/9pbmz/b3Nx/0RGRf85OTn/OTk5/zk5OZQsLCyULCws/yws
        LP9aXFv/3+Df/7/Cwf+sr67/uLu6/8bJyP+9wL//ur28/62xr/+YnJr/oKSi/62wr/+sr67/oaSj/4SJ
        h/9aXlz/nqCf/8bIx/+/wcD/j5KR/2lubP+Fioj/hYqI/4OIhv9bX13/Ojo6/zg4OP84ODj/ODg4lCsr
        K5QrKyv/LCws/zAxMf9XWln/pqin/7e5uP+Ljo3/vsC//7u+vf+xtbT/pqqp/5ygnv+anpz/c3d1/4KG
        hP90eHb/Zmtp/4mNi/95fnz/a29t/2tvbf93e3n/hYqI/4WKiP+DiIb/X2Nh/z4/P/82Njb/Nzc3/zc3
        N/84ODiULCwslCsrK/8rKyv/Kysr/ywsLP9HSUj/tLa1/52gn/9+goD/zc/P/77BwP+3urn/tbi3/3N2
        df+eoaD/kJSS/5KWlP+coJ7/lZqY/4+Tkf+ZnZz/lJiX/4uQjv+Fioj/hYqI/4OGhf9HSkn/NjY2/zY2
        Nv82Njb/Nzc3/zc3N5QsLCyUKysr/ysrK/8rKyv/Kysr/0RHRf/i4+P/ur28/5WZl/97f33/o6Wk/52f
        nv9ydnT/oKOi/7i7uf+wtLL/qa2r/6KmpP+bn53/o6al/6Sop/+coJ//lJiX/4uQjv+Gioj/fYB//0JE
        Q/80NDT/NTU1/zU1Nf82Njb/NjY2lCwsLJQsLCz/LCws/ysrK/8rKyv/Oz08/8TGxf/Fx8b/uLu5/6is
        qv+OkZD/hYqI/4+Tkv+ztrX/trm4/7S3tv+tsK//nqKh/5CUk/+usbD/rbCv/6Sop/+coJ//lJeW/46S
        kP9kZ2b/Nzg3/zQ0NP80NDT/NTU1/zU1Nf81NTWULCwslCwsLP8sLCz/LCws/ywsLP8tLS3/aWxq/+Lj
        4//ExsX/tbi3/6qurP+nq6n/xcfG/7i7uv+usbD/pKem/5mdnP+Pk5L/houJ/42Rj/+usa//qauq/6Gk
        o/+VmJf/bHBu/z5AP/8zMzP/MzMz/zMzM/80NDT/NDQ0/zQ0NJQsLCyULCws/ywsLP8sLCz/LCws/yws
        LP8yMzL/aGtq/8DBwP/Y2dn/y83M/6iqqf+nqaj/wsXE/7e6uf+ssK7/oqak/5icmv+NkpD/nJ+e/2Nm
        Zf9namn/Zmlo/01QTv85Ojn/MTEx/zIyMv8yMjL/MzMz/zMzM/8zMzP/NDQ0lCwsLJQsLCz/LCws/yws
        LP8sLCz/LCws/ywsLP8tLS3/Ozw8/0NGRf9CRUT/ODo5/05QT/+9v77/wcPC/7W4t/+rrq3/oaSj/6Wo
        p/+BhIP/Ojs7/y4uLv8vLy//MDAw/zAwMP8xMTH/MTEx/zExMf8yMjL/MjIy/zIyMv8zMzOULCwsjyws
        LP8sLCz/LCws/ywsLP8sLCz/LCws/ywsLP8sLCz/LCws/ysrK/8rKyv/LS0t/09RUP+Zm5r/uru7/7y+
        vf+nqqn/dnl3/z0/Pv8uLi7/Li4u/y4uLv8vLy//Ly8v/zAwMP8wMDD/MTEx/zExMf8xMTH/MjIy/zIy
        Mo8rKytEKysr+SsrK/8rKyv/Kysr/ysrK/8rKyv/Kysr/ysrK/8rKyv/Kysr/ysrK/8rKyv/Kysr/zU2
        Nv9BQ0L/REZF/z5AP/8xMTH/LS0t/y0tLf8tLS3/Li4u/y4uLv8uLi7/Ly8v/zAwMP8wMDD/MTEx/zEx
        Mf8xMTH5MjIyRCwsLAEoKChEJiYmjyYmJpQmJiaUJiYmlCYmJpQmJiaUJiYmlCYmJpQmJiaUJiYmlCYm
        JpQmJiaUJiYmlCYmJpQmJiaUJiYmlCcnJ5QnJyeUKCgolCgoKJQoKCiUKCgolCkpKZQqKiqUKioqlCoq
        KpQqKiqUKysrjy4uLkQyMjIBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>